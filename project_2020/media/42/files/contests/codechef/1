Question 1: Create a 4X2 integer array and Prints its attributes
Note: element must be a type of unsigned int16. And print the following Attributes: –
· The shape of an array.
· Array dimensions.
· The Length of each element of the array in bytes.
Source code:
import numpy as np
arr = np.empty([4,2], dtype = np.uint16)
print("Printing Array \n" , arr)
print("Array Shape is: ", np.shape(arr))
print("Array dimensions are ", np.ndim(arr))
print("Length of each element of array in bytes is ",arr.itemsize)
Output:
D:\abhinav\workspace\python
λ py test.py
Printing Array
[[13372 24971]
[47576 33457]
[ 1424 23888]
[62605 33526]]
Array Shape is:  (4, 2)
Array dimensions are  2
Length of each element of array in bytes is  2
__________________________________________________________________________________________________
Question 2: Create a 5X2 integer array from a range between 100 to 200 such that the difference between each element is 10
Source code:
import numpy as np 
print("Creating 5X2 array using arrange")
arr = np.arange(100, 200, 10)
arr = arr.reshape(5,2)
print (arr)
Output:
D:\abhinav\workspace\python
λ py test1.py
Creating 5X2 array using arrange
[[100 110]
[120 130]
[140 150]
[160 170]
[180 190]]
__________________________________________________________________________________________________
Question 3: Following is the provided numPy array. return array of items in the third column from all rows
Source code:
import numpy as np
Arr = np.array([[11 ,22, 33], [44, 55, 66], [77, 88, 99]])
print("Printing Input Array\n",Arr)
print("Printing array of items in the third column from all rows")
newarr = Arr[:,1]
print(newarr)

Output:
 D:\abhinav\workspace\python
λ py test2.py
Printing Input Array
[[11 22 33]
[44 55 66]
[77 88 99]]
Printing array of items in the third column from all rows
[22 55 88]
__________________________________________________________________________________________________
Question 4: Following is the given numpy array return array of odd rows and even columns
Source code:
import numpy as np
Arr = np.array([[3 ,6, 9, 12], [15 ,18, 21, 24],
[27 ,30, 33, 36], [39 ,42, 45, 48], [51 ,54, 57, 60]])
print("Printing Input Array\n",Arr)
print("Printing array of odd rows and even columns")
newarr = Arr[::2, 1::2]
print(newarr)

Output:
D:\abhinav\workspace\python
λ py test4.py
Printing Input Array
[[ 3  6  9 12]
[15 18 21 24]
[27 30 33 36]
[39 42 45 48]
[51 54 57 60]]
Printing array of odd rows and even columns
[[ 6 12]
[30 36]
[54 60]]
__________________________________________________________________________________________________
Question 5: Add the following two NumPy arrays and Modify a result array by calculating the square root of each element
Source code:
import numpy as np
arr1 = np.array([[5, 6, 9], [21 ,18, 27]])
arr2 = np.array([[15 ,33, 24], [4 ,7, 1]])
result  = arr1 + arr2
print("addition of two arrays is \n",result)
for i in range(len(result)):
    for j in range(len(result[0])):
        result[i,j]=(pow(result[i,j],1/2))
print("\nResult array after calculating the square root of all elements\n")
print(result)

Output:
D:\abhinav\workspace\python

__________________________________________________________________________________________________
Question 6: Split the array into four equal-sized sub-arrays
Source code:
Output:
D:\abhinav\workspace\python

__________________________________________________________________________________________________
Question 7: Sort following NumPy array
· 7.1- by the second row and
· 7.2-by the second column
Source code:
Output:
D:\abhinav\workspace\python

__________________________________________________________________________________________________
Question 8: Following is the 2-D array. Print max from axis 0 and min from axis 1
Source code:
Output:
D:\abhinav\workspace\python

__________________________________________________________________________________________________
Question 9: Following is the input NumPy array delete column two and insert following new column in its place.
Source code:
Output:
D:\abhinav\workspace\python

__________________________________________________________________________________________________
